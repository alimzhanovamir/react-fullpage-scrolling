{"version":3,"sources":["components/slider/slider.module.scss","components/slider/slider-range/slider-range.module.scss","components/fullpage-slider/dots/dots.module.scss","components/fullpage-slider/fullpage-slider.module.scss","components/fullpage-slider/fullpage-slide/fullpage-slide.module.scss","page/page.module.scss","components/fullpage-slider/fullpage-slide/fullpage-slide.jsx","components/fullpage-slider/dots/dots.jsx","components/fullpage-slider/fullpage-slider.jsx","components/slider/slider-range/slider-range.jsx","components/slider/slider.jsx","page/page.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Fullpageslide","pageNumber","children","className","cls","Dots","slidesCount","currentSlide","setSlide","catchChildState","useState","activeButton","setActiveButton","dots","i","push","useEffect","map","id","onClick","aria-label","Fullpageslider","childSetState","timeout","touchTimer","slides","length","sliderInnerRef","useRef","sliderRef","wheelScrollCount","setTransform","current","style","cssText","wheel","e","direction","Math","sign","deltaY","clearTimeout","setTimeout","touchStart","touchEnd","touchStartHandler","touches","pageY","touchMoveHandler","changedTouches","abs","setSlideFromTouch","window","addEventListener","removeEventListener","ref","content","idx","setState","SliderRange","currentValue","setCurrentValue","slideRange","tags","Array","from","elm","left","onChange","value","currentTarget","ceil","type","min","max","step","title","Slider","items","sliderStage","text","Page","slidesContent","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b1917569.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"slider_slider__3XFgR\",\"slider__stage\":\"slider_slider__stage__2ZNY9\",\"slider__item\":\"slider_slider__item__3p03b\",\"slider__title\":\"slider_slider__title__1tpDJ\",\"slider__text\":\"slider_slider__text__3kHio\",\"slider__range\":\"slider_slider__range__2KVpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider-range__tags\":\"slider-range_slider-range__tags__3q4OD\",\"slider-range__tag\":\"slider-range_slider-range__tag__YwWi4\",\"slider-range__tag-number\":\"slider-range_slider-range__tag-number__xqKCo\",\"slider-range__input\":\"slider-range_slider-range__input__R82_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dots\":\"dots_dots__1XQpn\",\"dot\":\"dots_dot__2tWU_\",\"dot__button\":\"dots_dot__button__2GYXH\",\"dot__button--active\":\"dots_dot__button--active__3zUK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullpage-slider\":\"fullpage-slider_fullpage-slider__1KFz-\",\"fullpage-slider__inner\":\"fullpage-slider_fullpage-slider__inner__2Sxov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullpage-slide\":\"fullpage-slide_fullpage-slide__3Hp4G\",\"fullpage-slide__number\":\"fullpage-slide_fullpage-slide__number__35pTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"page_page__3rEXu\"};","import React from 'react';\r\nimport cls from './fullpage-slide.module.scss';\r\n\r\nexport const Fullpageslide = ({pageNumber, children}) => {\r\n  return (\r\n    <div className={cls['fullpage-slide']}>\r\n      <div className={cls['fullpage-slide__number']}>{`Page number ${pageNumber}`}</div>\r\n      {children}\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport cls from './dots.module.scss';\r\n\r\nexport const Dots = ({slidesCount, currentSlide, setSlide, catchChildState}) => {\r\n  const [activeButton, setActiveButton] = useState(currentSlide);\r\n  const dots = [];\r\n  \r\n  for (let i = 0; i < slidesCount; i++) {\r\n    dots.push(i);\r\n  }\r\n\r\n  useEffect( ()=> {\r\n    catchChildState(setActiveButton);\r\n  }, [])\r\n\r\n  \r\n  return (\r\n   <ul className={cls['dots']}>\r\n    {dots.map( id => (\r\n      <li className={cls['dot']}>\r\n        <button\r\n          className={`${cls['dot__button']} ${activeButton === id ? cls['dot__button--active'] : ''}`}\r\n          onClick={() => {\r\n            setSlide(id);\r\n            setActiveButton(id)\r\n          }}\r\n          aria-label={`Переключить на страницу номер ${id+1}`}\r\n          ></button>\r\n      </li>\r\n    ))}\r\n   </ul>\r\n  );\r\n}","import React, { useEffect, useRef, Component } from 'react';\r\nimport cls from './fullpage-slider.module.scss';\r\nimport { Fullpageslide } from './fullpage-slide/fullpage-slide';\r\nimport { Dots } from './dots/dots';\r\n\r\nexport const Fullpageslider = ({slides}) => {\r\n  \r\n  const slidesCount = slides.length;\r\n  const sliderInnerRef = useRef(null);\r\n  const sliderRef = useRef(null);\r\n  \r\n  let wheelScrollCount = 0;\r\n  const scrollDelay = 300;\r\n  const neededWheelScrollCount = 3\r\n  let currentSlide = 0;\r\n  let childSetState;\r\n  let timeout;\r\n\r\n  // Подъем функции изменения состояния дочернего элемнета\r\n  // Что меня состояние только дочернего элемента\r\n  const catchChildState = setState => {\r\n    childSetState = setState;\r\n  }\r\n\r\n  // Переключение слайдов\r\n  const setTransform = (slidesCount, currentSlide) => {\r\n    sliderInnerRef.current.style.cssText = `\r\n    -webkit-transform: translateY(-${ 100 / slidesCount * currentSlide }%);\r\n        -ms-transform: translateY(-${ 100 / slidesCount * currentSlide }%);\r\n            transform: translateY(-${ 100 / slidesCount * currentSlide }%);`\r\n  }\r\n\r\n  // begin::: Колбэк события прокрутки\r\n  const wheel = e => {   \r\n    // Инкременентируем количество прокруток\r\n    wheelScrollCount++;\r\n    \r\n    const direction = Math.sign(e.deltaY);\r\n    \r\n    if ( direction > 0 && currentSlide + 1 < slidesCount && wheelScrollCount > neededWheelScrollCount) {\r\n      currentSlide = currentSlide + 1\r\n      // Делаем сброс кол-ва прокруток как только произошло событие переключения\r\n      wheelScrollCount = 0;\r\n    }\r\n\r\n    else if ( direction < 0 && currentSlide > 0 && wheelScrollCount > neededWheelScrollCount) {\r\n      currentSlide = currentSlide - 1\r\n      // Делаем сброс кол-ва прокруток как только произошло событие переключения\r\n      wheelScrollCount = 0;\r\n    }\r\n\r\n    if ( timeout ) {\r\n      clearTimeout(timeout);\r\n    }\r\n\r\n    // Сброс количества прокруток\r\n    timeout = setTimeout( () => {\r\n      // Делаем сброс кол-ва прокруток, если вышел таймаут\r\n      wheelScrollCount = 0;\r\n    }, scrollDelay);\r\n\r\n    // Пееключить слайд\r\n    setTransform(slidesCount, currentSlide);\r\n    // Изменить стейт компонента Dots, задать значение текущего слайда\r\n    childSetState(currentSlide);\r\n  }\r\n\r\n  // end::: Колбэк события прокрутки\r\n\r\n  // begin::: Колбэк события клика на точки\r\n  const setSlide = id => {\r\n    setTransform(slidesCount, id);\r\n  }\r\n  // end::: Колбэк события клика на точки\r\n\r\n\r\n  // begin::: Обработка тач-событий\r\n  let touchStart = 0;\r\n  let touchEnd = 0;\r\n  let touchTimer;\r\n  const swipeCountToChange = 150;\r\n\r\n  const setSlideFromTouch = (touchStart, touchEnd) => {\r\n    const neededSwipeCount = Math.abs(touchStart - touchEnd) > swipeCountToChange;\r\n    \r\n    if ( neededSwipeCount ) {\r\n      if ( touchStart > touchEnd && currentSlide + 1 < slidesCount) {\r\n        currentSlide = currentSlide + 1\r\n        // Делаем сброс кол-ва прокруток как только произошло событие переключения\r\n        wheelScrollCount = 0;\r\n      }\r\n      else if ( touchStart < touchEnd && currentSlide > 0 ) {\r\n        currentSlide = currentSlide - 1\r\n        // Делаем сброс кол-ва прокруток как только произошло событие переключения\r\n        wheelScrollCount = 0;\r\n      }\r\n  \r\n      // Пееключить слайд\r\n      setTransform(slidesCount, currentSlide);\r\n      // Изменить стейт компонента Dots, задать значение текущего слайда\r\n      childSetState(currentSlide);\r\n    }\r\n  }\r\n\r\n  const touchStartHandler = e => {\r\n    touchStart = e.touches[0].pageY;\r\n  }\r\n\r\n  const touchMoveHandler = e => {\r\n    touchEnd = e.changedTouches[0].pageY;\r\n\r\n    if ( touchTimer ) {\r\n      clearTimeout(touchTimer);\r\n    }\r\n\r\n    // Сброс количества прокруток\r\n    touchTimer = setTimeout( () => {\r\n      setSlideFromTouch(touchStart, touchEnd);\r\n    }, scrollDelay);\r\n\r\n  }\r\n  // end::: Обработка тач-событий\r\n\r\n  /* Жизненный цикл \"монтирован\"\r\n   * Добавляем слушатель на window\r\n   */ \r\n  useEffect(() => {\r\n    window.addEventListener('wheel', wheel);\r\n    sliderRef.current.addEventListener('touchstart', touchStartHandler);\r\n    sliderRef.current.addEventListener('touchmove', touchMoveHandler);\r\n    return () => window.removeEventListener('wheel', wheel);\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <div className={cls['fullpage-slider']} ref={sliderRef}>\r\n        <div\r\n          className={cls['fullpage-slider__inner']}\r\n          ref={sliderInnerRef}>\r\n          {slides.map( (content, idx) => <Fullpageslide pageNumber={idx + 1}>{content}</Fullpageslide> )}\r\n        </div>\r\n      </div>\r\n\r\n      <Dots\r\n        slidesCount={slidesCount}\r\n        currentSlide={currentSlide}\r\n        setSlide={setSlide}\r\n        catchChildState={catchChildState}\r\n        />\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport cls from './slider-range.module.scss';\r\n\r\nexport const SliderRange = ({slidesCount, setSlide}) => {\r\n  const [currentValue, setCurrentValue] = useState(0);\r\n  const slideRange = 100/slidesCount;\r\n  const tags = Array.from({length: slidesCount}, (elm, idx) => idx + 1);\r\n\r\n  const moveSlides = e => {\r\n    const value = e.currentTarget.value;\r\n    setCurrentValue(value);\r\n    setSlide( Math.ceil(value / slideRange - 1) );\r\n  };\r\n\r\n  return (\r\n    <div className={cls['slider-range']}>\r\n      <div \r\n        className={cls['slider-range__tags']} \r\n        style={{\r\n          'margin-right': `-${(100 / slidesCount / 2) }%`,\r\n          'margin-left': `-${(100 / slidesCount / 2) }%`\r\n          }}>\r\n        {tags.map( (id, idx) => (\r\n          <div \r\n            className={cls['slider-range__tag']}\r\n            style={{left: `${(100 / slidesCount * idx) + (100 / slidesCount / 2) }%`}}\r\n          >\r\n            <span className={cls['slider-range__tag-number']}>{id}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input \r\n        className={cls['slider-range__input']}\r\n        onChange={moveSlides}\r\n        value={currentValue}\r\n        type='range'\r\n        min='0'\r\n        max='100'\r\n        step='1'\r\n        aria-label={`Активный слайд ${currentValue === 0 ? 1 : Math.ceil(currentValue / slideRange)}`}\r\n        title='Переключение сладов'\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport cls from './slider.module.scss';\r\nimport { SliderRange } from './slider-range/slider-range';\r\n\r\nexport const Slider = ({items}) => {\r\n  const slidesCount = items.length;\r\n  const sliderStage = useRef(null);\r\n\r\n  // Переключение слайдов\r\n  const setTransform = (slidesCount, currentSlide) => {\r\n    sliderStage.current.style.cssText = `\r\n    -webkit-transform: translateX(-${ 100 * currentSlide }vw);\r\n        -ms-transform: translateX(-${ 100 * currentSlide }vw);\r\n            transform: translateX(-${ 100 * currentSlide }vw);`\r\n  }\r\n\r\n  const setSlide = id => {\r\n    setTransform(slidesCount, id);\r\n  }\r\n  \r\n  return (\r\n    <div className={cls['slider']}>\r\n      <div className={cls['slider__stage']} ref={sliderStage}>\r\n        {items.map( ({title, text}) => (\r\n          <article className={cls['slider__item']}>\r\n            <h1 className={cls['slider__title']}>{title}</h1>\r\n            <p className={cls['slider__text']}>{text}</p>\r\n          </article>\r\n        ))}\r\n      </div>\r\n      <div className={cls['slider__range']}>\r\n        <SliderRange \r\n          slidesCount={slidesCount}\r\n          setSlide={setSlide}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport cls from './page.module.scss';\r\nimport { Fullpageslider } from '../components/fullpage-slider/fullpage-slider';\r\nimport { Slider } from '../components/slider/slider';\r\n\r\nexport const Page = () => {\r\n  const sliderData = [\r\n    {\r\n      title: 'Что такое Lorem Ipsum?',\r\n      text: 'Lorem Ipsum - это текст-\"рыба\", часто используемый в печати и вэб-дизайне. Lorem Ipsum является стандартной \"рыбой\" для текстов на латинице с начала XVI века. В то время некий безымянный печатник создал большую коллекцию размеров и форм шрифтов, используя Lorem Ipsum для распечатки образцов.'\r\n    },\r\n    {\r\n      title: 'Почему он используется?',\r\n      text: 'Давно выяснено, что при оценке дизайна и композиции читаемый текст мешает сосредоточиться. Lorem Ipsum используют потому, что тот обеспечивает более или менее стандартное заполнение шаблона, а также реальное распределение букв и пробелов в абзацах, которое не получается при простой дубликации \"Здесь ваш текст.. Здесь ваш текст.'\r\n    },\r\n    {\r\n      title: 'Откуда он появился?',\r\n      text: 'Многие думают, что Lorem Ipsum - взятый с потолка псевдо-латинский набор слов, но это не совсем так. Его корни уходят в один фрагмент классической латыни 45 года н.э., то есть более двух тысячелетий назад.'\r\n    },\r\n    {\r\n      title: 'Где его взять?',\r\n      text: 'Есть много вариантов Lorem Ipsum, но большинство из них имеет не всегда приемлемые модификации, например, юмористические вставки или слова, которые даже отдалённо не напоминают латынь.'\r\n    }\r\n  ];\r\n\r\n  const slidesContent = [\r\n    <Slider items={sliderData}/>,\r\n    'Hello',\r\n    'World',\r\n  ];\r\n  \r\n  return (\r\n    <div className={cls['page']}>\r\n      <Fullpageslider slides={slidesContent}/>\r\n   </div>\r\n  );\r\n}","import React from 'react';\r\nimport './App.module.scss';\r\nimport { Page } from './page/page';\r\n\r\nfunction App() {\r\n  return (\r\n    <Page/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}